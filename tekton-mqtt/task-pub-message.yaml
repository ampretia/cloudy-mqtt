---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: slack-post-message
spec:
  params:
    - name: domain
      description: |
        the Slack domain to send the message to.
        If not set, the message will be posted to the Slack integration(s) as defined in the Toolchain.
      default: ""
    - name: channel
      description: |
        the Slack channel to send the message to.
        When set, overrides the default channel as set in the Slack Webhook URL.
        Only non-private channel can override the default channel.
        If the target channel is a private channel, the Slack Webhook URL in the Slack toolchain 
        integration card needs to be updated.
      default: ""
    - name: message-format
      description: the format of the message. text(default) or JSON payload.
      default: text
    - name: message-script
      description: Shell script that provides messsage content.
      default: ""
    - name: message
      description: the message to send to Slack
      default: |
        Tekton Pipeline completed successfully. :heavy_check_mark:
        Visit *<https://api.slack.com/reference/surfaces/formatting|More on Slack message formatting.>*
    - name: exit-on-error
      description: |
        flag (`true` | `false`) to indicate if the task should fail or continue
        if unable to process the message or post to Slack.
      default: "false"
    - name: pipeline-debug
      description: Pipeline debug mode
      default: "0"
  workspaces:
    - name: workspace
      description: |
        A workspace that contain data useful for the script/slack message resolution.
        Should be marked as optional when Tekton will permit it
      mountPath: /artifacts
  stepTemplate:
    env:
      - name: PIPELINE_DEBUG
        value: $(params.pipeline-debug)
  steps:
    - name: post-to-slack
      # tbd: use an image with curl and jq?
      image: ibmcom/pipeline-base-image:2.6
      env:
        # keep slack message injected in an env var to let YAML manage the quote for us
        - name: SLACK_MESSAGE
          value: $(params.message)
        - name: PIPELINE_RUN_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tekton.dev/pipelineRun']
        - name: PIPELINE_RUN_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/tekton-pipeline']
        - name: PIPELINE_RUN_URL
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/pipeline-run-url']
        - name: BUILD_NUMBER
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/build-number']
        - name: PIPELINE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/pipeline-id']
        - name: TRIGGER_TYPE
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/trigger-type']
        - name: TRIGGER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/trigger-name']
        - name: TRIGGERED_BY
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/triggered-by']
      script: |
        #!/usr/bin/env node
        